{"name":"Restless","tagline":"A C++ REST client. Make readable HTTP requests","body":"[![Build Status](https://drone.io/github.com/anuragsoni/restless/status.png)](https://drone.io/github.com/anuragsoni/restless/latest)\r\n# Restless\r\nRestless is a simple REST client for C++, powered by curl.\r\n\r\n\r\n## Integration\r\n\r\nYou can use your project's existing build system to compile\r\nall the files in `src` directory and link to your project.\r\n\r\nTo use this all you need to do is add\r\n\r\n```cpp\r\n#include <restless.hpp>\r\n\r\n// for a more readable name\r\nusing Http = asoni::Handle;\r\n```\r\n\r\n## Examples\r\n\r\n```cpp\r\n\r\n\r\n/*\r\n * A simple get request\r\n **/\r\n\r\nauto res1 = Http().get(\"http://httpbin.org/get\")\r\n            .exec();\r\n\r\n/*\r\n * A get request with basic auth and a custom header\r\n **/\r\n\r\nauto res2 = Http().get(\"http://httpbin.org/get\", \"password-for-basic-auth\")\r\n            .header({{\"Hello\", \"This is a header\"}, {\"Second\",\"Another header\"}})\r\n            .exec();\r\n\r\n/*\r\n * A post request with basic auth\r\n **/\r\nauto post1 = Http().post(\"http://httpbin.org/post\", \"super-secret-password\")\r\n                    .content(\"text/plain\", \"Hello world\")\r\n                    .exec();\r\n\r\n/*\r\n * A simple put request\r\n **/\r\n\r\nauto put1 = Http().put(\"http://httpbin.org/put\")\r\n            .content(\"text/plain\", \"Hello world\")\r\n            .exec();\r\n\r\n/*\r\n * A simple delete request\r\n **/\r\n\r\nauto del = Http().del(\"http://httpbin.org/delete\")\r\n           .exec();\r\n\r\n\r\n```\r\n\r\n\r\n## Prerequisites\r\n* libcurl\r\n* A compiler with C++11 support (GCC 4.8 and higher, Clang 3.4 and higher)\r\n* cmake (At least version 2.8.11)\r\n\r\n**Note:**A vagrant file has been provided that will provision a Ubuntu14.04\r\nbox with all the pre-requisites. Just ```vagrant up``` then ```vagrant ssh```.\r\nYou will find the code in /vagrant directory inside the vagrant box.\r\n\r\n## External libraries\r\n* [philsquared's catch unit testing](https://github.com/philsquared/Catch)\r\n\r\n## Steps to build\r\n* cd build\r\n* cmake ..\r\n* make\r\n* make test (optional)\r\n","google":"UA-40004625-2","note":"Don't delete this file! It's used internally to help with page regeneration."}